{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","App","useState","setTodos","todoNameRef","useRef","LOCAL_STORAGE_KEY","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAEe,SAASA,EAAT,GAAmC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAMhC,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAP3D,WACIJ,EAAWD,EAAKM,OAOPN,EAAKO,UCTP,SAASC,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,MAAOR,EAAa,EAAbA,WACrC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,YCmEpBK,MArEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACMC,EAAcC,mBAEdC,EAAoB,gBAqD1B,OAnDAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAOC,aAAaC,QAC5CN,IACGE,GAAaL,EAASK,KAEzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQP,EAAmBG,KAAKK,UAAUf,MACtD,CAACA,IA2CF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WA1C5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAGA,EAAKM,KAAOA,KAS9CN,EAAKI,UAAYJ,EAAKI,SACtBS,EAASY,MA+BP,uBAAOE,IAAKb,EAAaZ,KAAK,SAC9B,wBAAQ0B,QA1BZ,SAAuBC,GACrB,IAAMtB,EAAOO,EAAYgB,QAAQC,MACpB,KAATxB,IAMJM,GAAS,SAAAmB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAI7DU,EAAYgB,QAAQC,MAAQ,OAa1B,sBACA,wBAAQH,QAVZ,WACE,IAAMH,EAAWhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAC5CS,EAASY,IAQP,6BACA,gCAAMhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAAU+B,OAA3C,qBChENC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a1704b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Todo({todo, toggleTodo}) {\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(todo.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\r\n                {todo.name}\r\n            </label>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList({todos, toggleTodo}) {\r\n    return (\r\n        todos.map(todo=>{\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n    )\r\n}","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport {v4 as uuidv4} from 'uuid';\n\nfunction App() {\n  //{id: 1, name: 'Todo 1', complete: false}\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  const LOCAL_STORAGE_KEY = 'todoApp.todos'\n\n  useEffect(()=>{\n    const storedTodos = JSON.parse( localStorage.getItem\n    (LOCAL_STORAGE_KEY) );\n    if (storedTodos) setTodos(storedTodos);\n\n  }, [])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo =>todo.id === id);\n    // let todo = null;\n    \n    // for (let i = 0; i < newTodos.length; i++) {\n    //   if(newTodos[i].id === id ) {\n    //     todo = newTodos[i];\n    //   }\n    // }\n\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n\n\n  }\n\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    \n    // setTodos(prevTodos => {\n    //   return [...prevTodos, {id: (Math.random() * 999) + 1, name: name, complete: false}]\n    // })\n\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n\n    //clear field\n    todoNameRef.current.value = null;\n\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}